
/*******************************************************************************
    Verilog netlist generated by IPGEN Lattice Propel (64-bit)
    2024.2.2410282205
    Soft IP Version: 1.0.0
    2024 11 06 17:00:59
*******************************************************************************/
/*******************************************************************************
    Wrapper Module generated per user settings.
*******************************************************************************/
(* ORIG_MODULE_NAME="u23_config_intf_feedthrough", LATTICE_IP_GENERATED="1" *) module u23_config_intf_feedthrough (ahbl_hsel_slv_i, 
        ahbl_haddr_slv_i, 
        ahbl_hburst_slv_i, 
        ahbl_hsize_slv_i, 
        ahbl_hmastlock_slv_i, 
        ahbl_hprot_slv_i, 
        ahbl_htrans_slv_i, 
        ahbl_hwdata_slv_i, 
        ahbl_hwrite_slv_i, 
        ahbl_hready_slv_i, 
        ahbl_hreadyout_slv_o, 
        ahbl_hresp_slv_o, 
        ahbl_hrdata_slv_o, 
        ahbl_hsel_mstr_o, 
        ahbl_haddr_mstr_o, 
        ahbl_hburst_mstr_o, 
        ahbl_hsize_mstr_o, 
        ahbl_hmastlock_mstr_o, 
        ahbl_hprot_mstr_o, 
        ahbl_htrans_mstr_o, 
        ahbl_hwdata_mstr_o, 
        ahbl_hwrite_mstr_o, 
        ahbl_hready_mstr_o, 
        ahbl_hready_mstr_i, 
        ahbl_hresp_mstr_i, 
        ahbl_hrdata_mstr_i) ;
    input ahbl_hsel_slv_i ; 
    input [16:0] ahbl_haddr_slv_i ; 
    input [2:0] ahbl_hburst_slv_i ; 
    input [2:0] ahbl_hsize_slv_i ; 
    input ahbl_hmastlock_slv_i ; 
    input [3:0] ahbl_hprot_slv_i ; 
    input [1:0] ahbl_htrans_slv_i ; 
    input [31:0] ahbl_hwdata_slv_i ; 
    input ahbl_hwrite_slv_i ; 
    input ahbl_hready_slv_i ; 
    output ahbl_hreadyout_slv_o ; 
    output ahbl_hresp_slv_o ; 
    output [31:0] ahbl_hrdata_slv_o ; 
    output ahbl_hsel_mstr_o ; 
    output [16:0] ahbl_haddr_mstr_o ; 
    output [2:0] ahbl_hburst_mstr_o ; 
    output [2:0] ahbl_hsize_mstr_o ; 
    output ahbl_hmastlock_mstr_o ; 
    output [3:0] ahbl_hprot_mstr_o ; 
    output [1:0] ahbl_htrans_mstr_o ; 
    output [31:0] ahbl_hwdata_mstr_o ; 
    output ahbl_hwrite_mstr_o ; 
    output ahbl_hready_mstr_o ; 
    input ahbl_hready_mstr_i ; 
    input ahbl_hresp_mstr_i ; 
    input [31:0] ahbl_hrdata_mstr_i ; 
    u23_config_intf_feedthrough_ipgen_lscc_ahb_lite_feedthrough #(.M_ADDR_WIDTH(17),
            .DATA_WIDTH(32)) lscc_ahb_lite_feedthrough_inst (.ahbl_hsel_slv_i(ahbl_hsel_slv_i), 
                .ahbl_haddr_slv_i(ahbl_haddr_slv_i[16:0]), 
                .ahbl_hburst_slv_i(ahbl_hburst_slv_i[2:0]), 
                .ahbl_hsize_slv_i(ahbl_hsize_slv_i[2:0]), 
                .ahbl_hmastlock_slv_i(ahbl_hmastlock_slv_i), 
                .ahbl_hprot_slv_i(ahbl_hprot_slv_i[3:0]), 
                .ahbl_htrans_slv_i(ahbl_htrans_slv_i[1:0]), 
                .ahbl_hwdata_slv_i(ahbl_hwdata_slv_i[31:0]), 
                .ahbl_hwrite_slv_i(ahbl_hwrite_slv_i), 
                .ahbl_hready_slv_i(ahbl_hready_slv_i), 
                .ahbl_hreadyout_slv_o(ahbl_hreadyout_slv_o), 
                .ahbl_hresp_slv_o(ahbl_hresp_slv_o), 
                .ahbl_hrdata_slv_o(ahbl_hrdata_slv_o[31:0]), 
                .ahbl_hsel_mstr_o(ahbl_hsel_mstr_o), 
                .ahbl_haddr_mstr_o(ahbl_haddr_mstr_o[16:0]), 
                .ahbl_hburst_mstr_o(ahbl_hburst_mstr_o[2:0]), 
                .ahbl_hsize_mstr_o(ahbl_hsize_mstr_o[2:0]), 
                .ahbl_hmastlock_mstr_o(ahbl_hmastlock_mstr_o), 
                .ahbl_hprot_mstr_o(ahbl_hprot_mstr_o[3:0]), 
                .ahbl_htrans_mstr_o(ahbl_htrans_mstr_o[1:0]), 
                .ahbl_hwdata_mstr_o(ahbl_hwdata_mstr_o[31:0]), 
                .ahbl_hwrite_mstr_o(ahbl_hwrite_mstr_o), 
                .ahbl_hready_mstr_o(ahbl_hready_mstr_o), 
                .ahbl_hready_mstr_i(ahbl_hready_mstr_i), 
                .ahbl_hresp_mstr_i(ahbl_hresp_mstr_i), 
                .ahbl_hrdata_mstr_i(ahbl_hrdata_mstr_i[31:0])) ; 
endmodule



`timescale 1ns/1ps
// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2022 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               :
// File                  : lscc_apb_feedthrough.v
// Title                 :
// Dependencies          : 1.
//                       : 2.
// Description           : Provides address map for master or memory map for slave.
//                         This is useful for exporting bus interfaces
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0.0
// Author(s)             :
// Mod. Date             :
// Changes Made          : Initial release.
// =============================================================================
module u23_config_intf_feedthrough_ipgen_lscc_ahb_lite_feedthrough #(parameter M_ADDR_WIDTH = 32, 
        parameter DATA_WIDTH = 32) (
    // -----------------------------------------------------------------------------
    // Module Parameters
    // -----------------------------------------------------------------------------
    // Propel has special purpose for M_ADDR_WIDTH in bridges 
    // ------------------------------------------------------------------------------
    // Input/Output Ports
    // ------------------------------------------------------------------------------
    //----------------------------
    // AHB-Lite Slave Interface 
    //----------------------------
    input ahbl_hsel_slv_i, 
    input [(M_ADDR_WIDTH - 1):0] ahbl_haddr_slv_i, 
    input [2:0] ahbl_hburst_slv_i, 
    input [2:0] ahbl_hsize_slv_i, 
    input ahbl_hmastlock_slv_i, 
    input [3:0] ahbl_hprot_slv_i, 
    input [1:0] ahbl_htrans_slv_i, 
    input [(DATA_WIDTH - 1):0] ahbl_hwdata_slv_i, 
    input ahbl_hwrite_slv_i, 
    input ahbl_hready_slv_i, 
    output ahbl_hreadyout_slv_o, 
    output ahbl_hresp_slv_o, 
    output [(DATA_WIDTH - 1):0] ahbl_hrdata_slv_o, 
    // -----------------------------------------
    // AHB-Lite Master Interface
    // -----------------------------------------
    output ahbl_hsel_mstr_o, 
    output [(M_ADDR_WIDTH - 1):0] ahbl_haddr_mstr_o, 
    output [2:0] ahbl_hburst_mstr_o, 
    output [2:0] ahbl_hsize_mstr_o, 
    output ahbl_hmastlock_mstr_o, 
    output [3:0] ahbl_hprot_mstr_o, 
    output [1:0] ahbl_htrans_mstr_o, 
    output [(DATA_WIDTH - 1):0] ahbl_hwdata_mstr_o, 
    output ahbl_hwrite_mstr_o, 
    output ahbl_hready_mstr_o, 
    input ahbl_hready_mstr_i, 
    input ahbl_hresp_mstr_i, 
    input [(DATA_WIDTH - 1):0] ahbl_hrdata_mstr_i) ;
    assign ahbl_hsel_mstr_o = ahbl_hsel_slv_i ; 
    assign ahbl_haddr_mstr_o = ahbl_haddr_slv_i ; 
    assign ahbl_hburst_mstr_o = ahbl_hburst_slv_i ; 
    assign ahbl_hsize_mstr_o = ahbl_hsize_slv_i ; 
    assign ahbl_hmastlock_mstr_o = ahbl_hmastlock_slv_i ; 
    assign ahbl_hprot_mstr_o = ahbl_hprot_slv_i ; 
    assign ahbl_htrans_mstr_o = ahbl_htrans_slv_i ; 
    assign ahbl_hwdata_mstr_o = ahbl_hwdata_slv_i ; 
    assign ahbl_hwrite_mstr_o = ahbl_hwrite_slv_i ; 
    assign ahbl_hready_mstr_o = ahbl_hready_slv_i ; 
    assign ahbl_hreadyout_slv_o = ahbl_hready_mstr_i ; 
    assign ahbl_hresp_slv_o = ahbl_hresp_mstr_i ; 
    assign ahbl_hrdata_slv_o = ahbl_hrdata_mstr_i ; 
endmodule


